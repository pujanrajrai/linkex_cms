# Generated by Django 5.1.6 on 2025-06-10 17:46

import base.mixins
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Agency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("company_name", models.CharField(max_length=255, unique=True)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="agency_logo"),
                ),
                ("owner_name", models.CharField(max_length=255)),
                ("address1", models.CharField(max_length=200)),
                ("address2", models.CharField(blank=True, max_length=200, null=True)),
                ("zip_code", models.CharField(max_length=10)),
                ("state", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=255)),
                ("contact_no_1", models.CharField(max_length=20)),
                (
                    "contact_no_2",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "credit_limit",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("max_user", models.PositiveIntegerField(default=0)),
                ("is_blocked", models.BooleanField(default=False)),
                (
                    "agency_code",
                    models.PositiveIntegerField(editable=False, unique=True),
                ),
                ("custom_per_kg_rate", models.FloatField(default=0)),
                ("handling_per_box_rate", models.FloatField(default=0)),
                (
                    "company_pan_vat",
                    models.FileField(
                        blank=True, null=True, upload_to="company_pan_vat"
                    ),
                ),
                (
                    "citizenship_front",
                    models.FileField(
                        blank=True, null=True, upload_to="citizenship_front"
                    ),
                ),
                (
                    "citizenship_back",
                    models.FileField(
                        blank=True, null=True, upload_to="citizenship_back"
                    ),
                ),
                (
                    "passport",
                    models.FileField(blank=True, null=True, upload_to="passport"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=30, unique=True)),
                ("short_name", models.CharField(max_length=6)),
                ("code", models.CharField(max_length=10)),
                (
                    "priority",
                    models.IntegerField(default=0, help_text="Priority for sorting"),
                ),
                (
                    "search_key",
                    models.CharField(
                        blank=True,
                        help_text="Search key for filtering",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["-priority"],
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("symbol", models.CharField(blank=True, max_length=10, null=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
        migrations.CreateModel(
            name="DividingFactor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("factor", models.PositiveIntegerField(unique=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                ("full_name", models.CharField(max_length=255)),
                ("contact_no", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Admin"), ("agencyuser", "Agency User")],
                        max_length=20,
                    ),
                ),
                ("is_default_user", models.BooleanField(default=False)),
                ("is_blocked", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "agency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="accounts.agency",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=30, unique=True)),
                ("address1", models.CharField(max_length=255, null=True)),
                ("address2", models.CharField(blank=True, max_length=255, null=True)),
                ("post_zip_code", models.CharField(max_length=20, null=True)),
                ("city", models.CharField(max_length=100, null=True)),
                ("state_county", models.CharField(max_length=100, null=True)),
                ("phone_number", models.CharField(max_length=20, null=True)),
                ("priority", models.IntegerField(default=0)),
                (
                    "country",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.country",
                    ),
                ),
            ],
            options={
                "ordering": ["-priority"],
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
        migrations.CreateModel(
            name="AgencyRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("company_name", models.CharField(max_length=255, unique=True)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="agency_logo"),
                ),
                ("owner_name", models.CharField(max_length=255)),
                ("address1", models.CharField(max_length=200)),
                ("address2", models.CharField(blank=True, max_length=200, null=True)),
                ("zip_code", models.CharField(max_length=10)),
                ("state", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=255)),
                (
                    "contact_no_1",
                    models.CharField(help_text="Contact number 1", max_length=20),
                ),
                (
                    "contact_no_2",
                    models.CharField(
                        blank=True,
                        help_text="Contact number 2",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "company_pan_vat",
                    models.FileField(
                        blank=True, null=True, upload_to="company_pan_vat"
                    ),
                ),
                (
                    "citizenship_front",
                    models.FileField(
                        blank=True, null=True, upload_to="citizenship_front"
                    ),
                ),
                (
                    "citizenship_back",
                    models.FileField(
                        blank=True, null=True, upload_to="citizenship_back"
                    ),
                ),
                (
                    "passport",
                    models.FileField(blank=True, null=True, upload_to="passport"),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.country",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
        migrations.AddField(
            model_name="agency",
            name="country",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="accounts.country"
            ),
        ),
        migrations.CreateModel(
            name="HistoricalAgency",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("company_name", models.CharField(db_index=True, max_length=255)),
                ("logo", models.TextField(blank=True, max_length=100, null=True)),
                ("owner_name", models.CharField(max_length=255)),
                ("address1", models.CharField(max_length=200)),
                ("address2", models.CharField(blank=True, max_length=200, null=True)),
                ("zip_code", models.CharField(max_length=10)),
                ("state", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=255)),
                ("contact_no_1", models.CharField(max_length=20)),
                (
                    "contact_no_2",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "credit_limit",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("max_user", models.PositiveIntegerField(default=0)),
                ("is_blocked", models.BooleanField(default=False)),
                (
                    "agency_code",
                    models.PositiveIntegerField(db_index=True, editable=False),
                ),
                ("custom_per_kg_rate", models.FloatField(default=0)),
                ("handling_per_box_rate", models.FloatField(default=0)),
                (
                    "company_pan_vat",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                (
                    "citizenship_front",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                (
                    "citizenship_back",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                ("passport", models.TextField(blank=True, max_length=100, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.country",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical agency",
                "verbose_name_plural": "historical agencys",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAgencyRequest",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("company_name", models.CharField(db_index=True, max_length=255)),
                ("logo", models.TextField(blank=True, max_length=100, null=True)),
                ("owner_name", models.CharField(max_length=255)),
                ("address1", models.CharField(max_length=200)),
                ("address2", models.CharField(blank=True, max_length=200, null=True)),
                ("zip_code", models.CharField(max_length=10)),
                ("state", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=255)),
                (
                    "contact_no_1",
                    models.CharField(help_text="Contact number 1", max_length=20),
                ),
                (
                    "contact_no_2",
                    models.CharField(
                        blank=True,
                        help_text="Contact number 2",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "company_pan_vat",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                (
                    "citizenship_front",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                (
                    "citizenship_back",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                ("passport", models.TextField(blank=True, max_length=100, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.country",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical agency request",
                "verbose_name_plural": "historical agency requests",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCompany",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("name", models.CharField(db_index=True, max_length=30)),
                ("address1", models.CharField(max_length=255, null=True)),
                ("address2", models.CharField(blank=True, max_length=255, null=True)),
                ("post_zip_code", models.CharField(max_length=20, null=True)),
                ("city", models.CharField(max_length=100, null=True)),
                ("state_county", models.CharField(max_length=100, null=True)),
                ("phone_number", models.CharField(max_length=20, null=True)),
                ("priority", models.IntegerField(default=0)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.country",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical company",
                "verbose_name_plural": "historical companys",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCountry",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("name", models.CharField(db_index=True, max_length=30)),
                ("short_name", models.CharField(max_length=6)),
                ("code", models.CharField(max_length=10)),
                (
                    "priority",
                    models.IntegerField(default=0, help_text="Priority for sorting"),
                ),
                (
                    "search_key",
                    models.CharField(
                        blank=True,
                        help_text="Search key for filtering",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical country",
                "verbose_name_plural": "historical countrys",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCurrency",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("symbol", models.CharField(blank=True, max_length=10, null=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical currency",
                "verbose_name_plural": "historical currencys",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDividingFactor",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("factor", models.PositiveIntegerField(db_index=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical dividing factor",
                "verbose_name_plural": "historical dividing factors",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalModule",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("name", models.CharField(db_index=True, max_length=50)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical module",
                "verbose_name_plural": "historical modules",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalUser",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        db_index=True,
                        max_length=254,
                        null=True,
                        verbose_name="email address",
                    ),
                ),
                ("full_name", models.CharField(max_length=255)),
                ("contact_no", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Admin"), ("agencyuser", "Agency User")],
                        max_length=20,
                    ),
                ),
                ("is_default_user", models.BooleanField(default=False)),
                ("is_blocked", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "agency",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.agency",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical user",
                "verbose_name_plural": "historical users",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalZipCode",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("city", models.CharField(help_text="City name", max_length=100)),
                (
                    "state_county",
                    models.CharField(help_text="State or County", max_length=100),
                ),
                (
                    "state_abbreviation",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "postal_code",
                    models.CharField(help_text="Postal/ZIP Code", max_length=20),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.country",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical zip code",
                "verbose_name_plural": "historical zip codes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAgencyAccess",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("can_create", models.BooleanField(default=False)),
                ("can_view", models.BooleanField(default=False)),
                ("can_update", models.BooleanField(default=False)),
                ("can_delete", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "agency",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.agency",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.module",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical agency access",
                "verbose_name_plural": "historical agency accesss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="ZipCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("city", models.CharField(help_text="City name", max_length=100)),
                (
                    "state_county",
                    models.CharField(help_text="State or County", max_length=100),
                ),
                (
                    "state_abbreviation",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "postal_code",
                    models.CharField(help_text="Postal/ZIP Code", max_length=20),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zip_codes",
                        to="accounts.country",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
        migrations.CreateModel(
            name="AgencyAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("can_create", models.BooleanField(default=False)),
                ("can_view", models.BooleanField(default=False)),
                ("can_update", models.BooleanField(default=False)),
                ("can_delete", models.BooleanField(default=False)),
                (
                    "agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agency_accesses",
                        to="accounts.agency",
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agency_accesses",
                        to="accounts.module",
                    ),
                ),
            ],
            options={
                "unique_together": {("agency", "module")},
            },
            bases=(models.Model, base.mixins.CaseSensitiveFieldsMixin),
        ),
    ]
