# Build stage
FROM python:3.11-alpine as builder

# Set environment variables
ENV PYTHONUNBUFFERED=1

# Set the working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    postgresql-dev \
    python3-dev

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
COPY requirements/requirements.txt .
RUN pip install --no-cache-dir --no-compile -r requirements.txt

# Clean up .pyc files
RUN find /opt/venv -type f -name '*.pyc' -delete

# Final stage
FROM python:3.11-alpine

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Install runtime dependencies
RUN apk add --no-cache libpq

# Set working directory
WORKDIR /app

# Copy virtual environment
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy application code (use .dockerignore to exclude unnecessary files)
COPY . .

# Copy and set up entrypoint
COPY prod.sh /prod.sh
RUN chmod +x /prod.sh

EXPOSE 8000

ENTRYPOINT ["/prod.sh"]